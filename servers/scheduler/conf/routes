# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /                               io.prediction.scheduler.Scheduler.online()

GET     /users/:userid/sync                       io.prediction.scheduler.Scheduler.userSync(userid: Int)

GET     /apps/:appid/delete                       io.prediction.scheduler.Operations.deleteApp(appid: Int)

GET     /apps/:appid/engines/:engineid/delete               io.prediction.scheduler.Operations.deleteEngine(appid: Int, engineid: Int)
GET     /apps/:appid/engines/:engineid/trainoncenow         io.prediction.scheduler.Scheduler.trainEngineOnceNow(appid: Int, engineid: Int)

GET     /apps/:appid/engines/:engineid/algos/:algoid/status                     io.prediction.scheduler.Scheduler.algoStatus(appid: Int, engineid: Int, algoid: Int)
GET     /apps/:appid/engines/:engineid/algos/:algoid/delete                     io.prediction.scheduler.Operations.deleteAlgo(appid: Int, engineid: Int, algoid: Int)

GET     /apps/:appid/engines/:engineid/offlineevals/:offlineevalid/delete       io.prediction.scheduler.Operations.deleteOfflineEval(appid: Int, engineid: Int, offlineevalid: Int)
GET     /apps/:appid/engines/:engineid/offlineevals/:offlineevalid/stop         io.prediction.scheduler.Scheduler.stopOfflineEval(appid: Int, engineid: Int, offlineevalid: Int)

GET     /apps/:appid/engines/:engineid/offlinetunes/:offlinetuneid/stop         io.prediction.scheduler.Scheduler.stopOfflineTune(appid: Int, engineid: Int, offlinetuneid: Int)

GET     /monitor/ramUsage                         io.prediction.scheduler.StatsMonitor.getRamUsage()
GET     /monitor/cpuUsage                         io.prediction.scheduler.StatsMonitor.getCpuUsage()
GET     /monitor/usedDiskSpace                    io.prediction.scheduler.StatsMonitor.getUsedDiskSpace()
GET     /monitor/jobs                             io.prediction.scheduler.StatsMonitor.getJobUsage()
GET     /monitor/stats                            io.prediction.scheduler.StatsMonitor.getStats()

GET   	/collector/stats/:numStats 		    				io.prediction.scheduler.StatsCollector.getStats(numStats: Int)
